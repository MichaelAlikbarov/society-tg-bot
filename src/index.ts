import { Telegraf } from 'telegraf';
import express from 'express';
import * as dotenv from 'dotenv';
import { askGPT } from './askGPT';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN!); // "!" –≥–æ–≤–æ—Ä–∏—Ç TypeScript, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–æ—á–Ω–æ –µ—Å—Ç—å

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—é.\n–í—ã–±–µ—Ä–∏ —Ç–µ–º—É –∏–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å.');
});

// –û—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('text', async (ctx) => {
  const question = ctx.message.text;

  ctx.reply('ü§î –î—É–º–∞—é...');

  try {
    const answer = await askGPT(question);
    ctx.reply(answer);
  } catch (err) {
    console.error(err);
    ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GPT. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.');
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');

// –ì—Ä–µ–π—Å—Ñ—É–ª —à—É—Ç–¥–∞—É–Ω
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

const app = express();
const PORT = process.env.PORT || 3000;

app.get('/', (_req, res) => {
  res.send('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`);
});